FROM node:16

# Create app directory
WORKDIR /app

# Declare build-time variables 
ARG ENVIRONMENT
ARG NAME
ARG PORT
ARG API_PREFIX
ARG AWS_REGION
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG ACCESS_SECRET
ARG EMAIL_SECRET
ARG FORGET_SECRET
ARG LIMITER
ARG PUBLIC_CONNECTION
ARG TENANTS_CONNECTION
ARG MAIN_DOMAIN
ARG DEVOPS_MODE
ARG AWS_SDK_JS_SUPPRESS_MAINTENANCE_MODE_MESSAGE
# ARG STRIPE_PRIVATE_KEY
# ARG STRIPE_WEBHOOK_SECRET
# ARG LOGGLY_ENDPOINT

# set environment variables 
ENV ENVIRONMENT=${ENVIRONMENT}
ENV NAME=${NAME}
ENV PORT=${PORT}
ENV API_PREFIX=${API_PREFIX}
ENV AWS_REGION=${AWS_REGION}
ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
ENV ACCESS_SECRET=${ACCESS_SECRET}
ENV EMAIL_SECRET=${EMAIL_SECRET}
ENV FORGET_SECRET=${FORGET_SECRET}
ENV LIMITER=${LIMITER}
ENV PUBLIC_CONNECTION=${PUBLIC_CONNECTION}
ENV TENANTS_CONNECTION=${TENANTS_CONNECTION}
ENV MAIN_DOMAIN=${MAIN_DOMAIN}
ENV DEVOPS_MODE=${DEVOPS_MODE}
ENV AWS_SDK_JS_SUPPRESS_MAINTENANCE_MODE_MESSAGE=${AWS_SDK_JS_SUPPRESS_MAINTENANCE_MODE_MESSAGE}
# ENV STRIPE_PRIVATE_KEY=${STRIPE_PRIVATE_KEY}
# ENV STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
# ENV LOGGLY_ENDPOINT=${LOGGLY_ENDPOINT}

# Install app dependencies
COPY package*.json ./
RUN npm install && npm cache clean --force

# Bundle app source
COPY . .
RUN npm run build

# Copy the tail-logs script and make it executable
COPY tail-logs.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/tail-logs.sh

EXPOSE 8000
# Command to run the application
CMD ["/usr/local/bin/tail-logs.sh", "npm", "start"]
